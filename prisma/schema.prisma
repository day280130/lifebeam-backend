// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

enum Gender {
  MALE
  FEMALE
}

model User {
  uid        String     @id @map("user_id") @db.VarChar(36)
  role       Role       @default(USER)
  gender     Gender
  age        Int
  biWeeklies BiWeekly[]
  diets      Diet[]
  activities Activity[]
  createdAt  DateTime   @default(now()) @map("created_at")
  updatedAt  DateTime   @updatedAt @map("updated_at")

  @@map("user")
}

model BiWeekly {
  weekTime String @map("week_time") @db.Char(7)
  userId   String @map("user_id") @db.VarChar(36)
  user     User   @relation(fields: [userId], references: [uid], onDelete: Cascade)
  height   Float
  weight   Float

  @@id([weekTime, userId])
  @@map("bi-weekly")
}

model Food {
  id            String       @id @default(uuid()) @map("food_id")
  name          String       @map("food_name") @db.VarChar(100)
  calorieAmount Float        @map("calorie_amount")
  diets         FoodOnDiet[]

  @@map("food")
}

model Diet {
  dateTime String       @map("date_time") @db.Char(10)
  userId   String       @map("user_id") @db.VarChar(36)
  user     User         @relation(fields: [userId], references: [uid], onDelete: Cascade)
  foods    FoodOnDiet[]

  @@id([dateTime, userId])
  @@map("diet")
}

model FoodOnDiet {
  userId   String @map("user_id") @db.VarChar(36)
  dateTime String @map("date_time") @db.Char(10)
  diet     Diet   @relation(fields: [userId, dateTime], references: [userId, dateTime], onDelete: Cascade)
  foodId   String @default(uuid()) @map("food_id")
  food     Food   @relation(fields: [foodId], references: [id], onDelete: NoAction)
  amount   Int

  @@id([userId, dateTime, foodId])
  @@map("food_on_diet")
}

model Exercise {
  id            String               @id @default(uuid()) @map("exercise_id")
  name          String               @map("exercise_name") @db.VarChar(100)
  unit          String               @db.VarChar(20)
  calorieBurned Float                @map("calorie_burned")
  activities    ExerciseOnActivity[]

  @@map("exercise")
}

model Activity {
  dateTime  String               @map("date_time") @db.Char(10)
  userId    String               @map("user_id") @db.VarChar(36)
  user      User                 @relation(fields: [userId], references: [uid], onDelete: Cascade)
  exercises ExerciseOnActivity[]

  @@id([dateTime, userId])
  @@map("activity")
}

model ExerciseOnActivity {
  userId     String   @map("user_id") @db.VarChar(36)
  dateTime   String   @map("date_time") @db.Char(10)
  activity   Activity @relation(fields: [userId, dateTime], references: [userId, dateTime], onDelete: Cascade)
  exerciseId String   @default(uuid()) @map("exercise_id")
  exercise   Exercise @relation(fields: [exerciseId], references: [id], onDelete: NoAction)
  amount     Int

  @@id([userId, dateTime, exerciseId])
  @@map("exercise_on_activity")
}
